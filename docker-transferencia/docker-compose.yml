version: '3.7'

services:

  api_bacen:
    container_name: api-bacen
    image: api-bacen-img
    build:
      context: ./apisMock/api-bacen/
      dockerfile: Dockerfile
    expose:
      - 8082
    ports:
      - 8082:8082
    restart: always
    networks:
      - transferencia-network
    labels:
      org.label-schema.group: "transferencia"

  api_cadastro:
    container_name: api-cadastro
    image: api-cadastro-img
    build:
      context: ./apisMock/api-cadastro/
      dockerfile: Dockerfile
    expose:
      - 8081
    ports:
      - 8081:8081
    restart: always
    networks:
      - transferencia-network
    labels:
      org.label-schema.group: "transferencia"

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssql
    user: root
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: Asd01020304
      MSSQL_PID: Express
    restart: unless-stopped
    volumes:
      - ./data/mssql/data:/var/opt/mssql/data
      - ./data/mssql/log:/var/opt/mssql/log
      - ./data/mssql/secrets:/var/opt/mssql/secrets
    expose:
      - 1433
    ports:
      - "1433:1433"
    networks:
      - transferencia-network
    labels:
      org.label-schema.group: "transferencia"
    
  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_storage:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - "9090:9090"
    networks:
      - transferencia-network
    labels:
      org.label-schema.group: "transferencia"
  
  grafana:
    image: grafana/grafana:9.2.0
    container_name: grafana
    volumes:
      - grafana_storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - "3000:3000"
    networks:
      - transferencia-network
    labels:
      org.label-schema.group: "transferencia"

  cache:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass UmVkaXMwMTAyMDMwNA==
    volumes:
      - cache:/data
    networks:
      - transferencia-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - transferencia-network
    labels:
      org.label-schema.group: "transferencia"

  init-queue:
    image: curlimages/curl
    container_name: init-queue
    depends_on:
      - rabbitmq
    command: >
      /bin/sh -c "
        while ! curl -s -u guest:guest http://rabbitmq:15672/api/whoami; do sleep 1; done;
        curl -s -u guest:guest -X PUT -H 'content-type: application/json' http://rabbitmq:15672/api/queues/%2F/bacen-queue -d '{\"durable\":true}';
      "
    networks:
      - transferencia-network
    labels:
      org.label-schema.group: "transferencia"

volumes:
  prometheus_storage: {}
  grafana_storage: {}
  mssqldb_storage: {}
  cache:
    driver: local
    

networks: 
  transferencia-network:
    driver: bridge